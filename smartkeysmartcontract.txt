pragma solidity ^0.4.19;

contract Room {
    address public seller;
    address public buyer;
    string public roomnumb;
    uint public arrival;
    uint public departure;
    string title;
    string public encryptedkey;
    string public encryptedkeyblockchain;
    uint public a;
    uint256 public price;
    uint public value;
    bool avaliability;
    bool bussy;
    
    
    //This is used as a traial of information exchange
    function getValue() constant returns(uint){
        return value;
    }
    function setValue(uint newValue){
        value=newValue;
    }


    //Proofs if a key is already assigned to the date and room selected
        function avaliabilitycheck() payable public {
        //Assign conditions
        require(arrival == 0x0);
        require(departure == 0x0);
        if (bussy=true){
        avaliability = true;
        }
        else{
        avaliability = false;
        }
    }
        
    
        //Allows the room to be booked 
    function rentroom() payable public {
        //Assign conditions
        //an hotel has been selected
        require(seller != 0x0);
        //room is avaliable
        require(buyer == 0x0);
        //confirm buyer
        require(msg.sender != seller);
        //
        buyer = msg.sender;
        //Valid tx.
        seller.transfer(msg.value);
        
    }
    
    //Sends encryptedkey to the blockchaiin
    function setValue3(string encryptedkey){
        encryptedkeyblockchain=encryptedkey;
        bussy=true;
    }
    
    //Returns value of the encryptedkey saved
    // in the blockchain, this function is called by the  Smartdoor
    function getValue2() constant returns(string){
        return encryptedkeyblockchain;
    }
    
 
    //Description of the rented room
    function Room () {
        //Seller name?
        seller = msg.sender;

        
        //Room number
        roomnumb = "103";
        
        //price in wei = 0.5 ETH = 90 CHF
        price = 500000000000000000;
    }    
    
        
    
}
